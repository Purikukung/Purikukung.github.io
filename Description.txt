ในส่วนของ index.html

HTML Structure:
<header>: ส่วนหัวของเว็บไซต์ที่ประกอบด้วยชื่อ "TrashTrack+" และเมนูที่สามารถคลิกเพื่อเปิด/ปิดเมนู (ผ่าน JavaScript) โดยมีลิงค์สำหรับการนำทางไปยังส่วนต่างๆ ของหน้าเว็บ
<div class="hero">: ส่วน Hero ซึ่งมีภาพพื้นหลังและข้อความที่เน้น "TrashTrack+" รวมถึงข้อมูลการติดต่อ (เบอร์โทรศัพท์และอีเมล)
<section id="about">: ส่วนเกี่ยวกับเว็บไซต์ "TrashTrack+" มีภาพและคำอธิบายเกี่ยวกับระบบการจัดการขยะ
<section id="features">: ส่วนแสดงคุณสมบัติของระบบ โดยแสดงรูปภาพและคำอธิบายสั้น ๆ เกี่ยวกับฟีเจอร์ต่าง ๆ
<section id="services">: ส่วนแสดงบริการที่เว็บไซต์ให้บริการ เช่น การวิเคราะห์ข้อมูล การตั้งค่า IoT และ AI Sorting
<section id="Dashborad">: ส่วนที่แสดงข้อมูลเกี่ยวกับ Dashboard ของถังขยะในแต่ละจุด พร้อมลิงค์เพิ่มเติม
<footer>: ส่วนท้ายของเว็บไซต์ที่มีข้อมูลการติดต่อ และลิงค์ "CONTACT US"

CSS:
hero: กำหนดรูปแบบของส่วน Hero โดยมีการตั้งค่าภาพพื้นหลัง (background-image) และการจัดตำแหน่งข้อความ ให้อยู่ตรงกลาง (center) พร้อมการปรับขนาดฟอนต์และ padding ขึ้นอยู่กับขนาดหน้าจอ (responsive)
footer: กำหนดสไตล์ของ Footer ให้มีพื้นหลังสีเทาเข้ม ตัวหนังสือสีขาว และให้จัดเรียงข้อความและลิงค์ให้เป็นแบบ Flexbox เพื่อให้ยืดหยุ่นและรองรับขนาดหน้าจอที่ต่างกัน
Responsive Design: ใช้ @media queries เพื่อปรับขนาดและจัดรูปแบบของส่วนต่างๆ ให้เหมาะสมกับหน้าจอขนาดเล็ก เช่น โทรศัพท์มือถือและแท็บเล็ต โดยการลดขนาดฟอนต์และปรับตำแหน่งต่างๆ

JavaScript:
toggleMenu(): ฟังก์ชันนี้ใช้ในการเปิดและปิดเมนูเมื่อคลิกที่ไอคอนเมนู โดยจะเปลี่ยนสถานะของเมนู (class active บน nav) และเปลี่ยนไอคอนเมนูจากการแสดงเป็นปิด และแสดงข้อความที่บอกสถานะเมนู (Menu หรือ Close)

----------

ในส่วนของ About.html

1. Head Section (ส่วนหัว):
meta charset: กำหนดการเข้ารหัสเป็น UTF-8 ซึ่งช่วยให้แสดงผลตัวอักษรภาษาไทยได้อย่างถูกต้อง
meta viewport: ทำให้เว็บไซต์ตอบสนองต่อขนาดหน้าจออุปกรณ์ที่ใช้ เช่น มือถือหรือแท็บเล็ต
link: เชื่อมโยงไปยังไฟล์ CSS ที่ใช้ในการตกแต่งหน้าเว็บไซต์
style: มีการกำหนดสไตล์โดยตรงในแท็ก <style> ซึ่งเป็นการออกแบบการแสดงผลต่างๆ เช่น การตั้งค่าขนาดตัวอักษร สีพื้นหลัง การจัดวางรูปภาพ เป็นต้น

2. Body Section (ส่วนของเนื้อหา):
header: เป็นส่วนที่แสดงชื่อเว็บไซต์และเมนูแบบเรียงลำดับ ซึ่งประกอบด้วยลิงก์ไปยังหน้าอื่นๆ ของเว็บไซต์
nav: เมนูนำทางของเว็บไซต์ที่มีลิงก์ไปยังส่วนต่าง ๆ เช่น หน้า HOME, INTRODUCTION, THEORY, CONCLUSION, POSTER และ CONTACT
section: ประกอบด้วยหลายๆ ส่วน ซึ่งแต่ละส่วนมีหัวข้อและเนื้อหาเกี่ยวกับโครงการ
introduction: แนะนำเกี่ยวกับปัญหาการจัดการขยะและวิธีการที่โครงการใช้เทคโนโลยี IoT ในการช่วยแก้ปัญหานี้
theory: อธิบายทฤษฎีหลักการทำงานของระบบ โดยใช้เทคโนโลยีต่างๆ เช่น Raspberry Pi, Stepper Motor, Webcam และการประมวลผลผ่าน Machine Learning
conclusion: สรุปผลการทดลองและข้อสรุปจากการทำโครงการนี้
poster: แสดงภาพโปสเตอร์ที่เกี่ยวกับโครงการหรือวิธีการจัดการขยะ
footer: ส่วนท้ายของเว็บไซต์ ซึ่งมีข้อมูลการติดต่อและลิงก์เพิ่มเติม เช่น ไปยังหน้า Contact หรือ Creators

3. Responsive Design (การออกแบบที่ตอบสนอง):
ในส่วนของ CSS จะมีการใช้ @media queries เพื่อปรับการแสดงผลให้เหมาะสมกับขนาดหน้าจอที่แตกต่างกัน เช่น เมื่อหน้าจอมีขนาดเล็กลง (มือถือ) ขนาดของฟอนต์หรือรูปภาพก็จะปรับให้พอดีกับหน้าจอเล็กลง เพื่อให้เว็บไซต์สามารถใช้งานได้สะดวกทั้งในคอมพิวเตอร์และอุปกรณ์เคลื่อนที่

4. CSS Styling (การตกแต่งสไตล์):
โค้ด CSS ใช้เพื่อควบคุมการจัดวางและการตกแต่งต่างๆ ของเว็บไซต์ เช่น สีพื้นหลังของแต่ละส่วน ขนาดฟอนต์ ระยะห่างระหว่างข้อความและรูปภาพ การจัดเรียงเลย์เอาต์ ฯลฯ
มีการใช้ box-shadow, border-radius, และ flexbox เพื่อทำให้เว็บไซต์ดูทันสมัยและใช้งานง่าย

----------

ในส่วนของ Contact.html

1. HTML Structure
<!DOCTYPE html>: กำหนดว่าเอกสารนี้เป็น HTML5
<html lang="en">: เริ่มต้นเอกสาร HTML และกำหนดภาษาเป็นอังกฤษ
<head>: เก็บข้อมูลที่เกี่ยวกับเอกสาร (meta, title, link, style)
<body>: ส่วนเนื้อหาหลักของหน้าเว็บ
ส่วนต่างๆ:
<header>: ประกอบด้วยชื่อเว็บ TrashTrack+ และเมนูที่สามารถคลิกเพื่อแสดง/ซ่อนเมนู
<nav>: เมนูลิงก์ต่างๆ ที่เชื่อมโยงกับหน้าเว็บอื่นๆ และส่วนต่างๆ
<section>: ส่วน "Contact Us" แสดงข้อมูลการติดต่อและอีเมล
<footer>: ส่วนท้ายของเว็บไซต์ แสดงข้อมูลติดต่อที่อยู่และลิขสิทธิ์ รวมถึงลิงก์สำหรับการติดต่อ

2. CSS Styles
body: ใช้ flex เพื่อจัดเรียงเนื้อหาภายในหน้าให้มีความสูงอย่างน้อยเท่ากับหน้าจอ
footer: กำหนดการจัดวางพื้นหลังสีเทาเข้ม, ข้อความสีขาว, การจัดตำแหน่งแบบ flex ให้ footer อยู่ด้านล่างสุด
footer a: กำหนดสไตล์ของลิงก์ใน footer ให้มีพื้นหลังสีเขียวเข้ม และเปลี่ยนสีเมื่อ hover
footer .footer-title: ทำให้ข้อความใน footer ที่มีคลาส .footer-title เป็นตัวหนาและขนาดใหญ่ขึ้น
Media Queries:
@media (max-width: 768px): ปรับการจัดวาง footer ให้เป็นแนวตั้ง และข้อความใน footer ขนาดเล็กลงเมื่อขนาดหน้าจอเล็กลง
@media (max-width: 480px): ปรับขนาดตัวอักษรและ padding ของลิงก์ใน footer ให้เล็กลงอีกเมื่อหน้าจอเล็กลง

3. JavaScript
toggleMenu(): ฟังก์ชันนี้ทำงานเมื่อคลิกที่ไอคอนเมนู (menu-icon-container) โดยมันจะ:
เปลี่ยนสถานะการแสดงผลของเมนู (nav) ด้วยการเพิ่ม/ลบคลาส active
เปลี่ยนไอคอนของเมนูจากปกติเป็นปิด (close)
เปลี่ยนข้อความในเมนูจาก "Menu" เป็น "Close" เมื่อเมนูเปิด และกลับเป็น "Menu" เมื่อเมนูปิด

4. อื่นๆ
<img src="photo/email.jpg" alt="Email Icon">: รูปภาพที่ใช้แสดงสัญลักษณ์อีเมลในส่วน "Contact Us"
<p>: ใช้แสดงข้อความเกี่ยวกับข้อมูลการติดต่อและอีเมล

----------

ในส่วนของ creator.html

1. HTML Structure
<html lang="th">: กำหนดภาษาในเอกสารเป็นภาษาไทย
<head>: ส่วนที่เก็บข้อมูลที่ไม่แสดงบนหน้าเว็บ เช่น meta, link, style
<body>: เนื้อหาหลักของหน้าเว็บ
ส่วนต่างๆ:
<header>: มีชื่อเว็บไซต์ "TrashTrack+" และเมนูที่สามารถแสดงหรือซ่อนเมื่อคลิก
<nav>: เมนูลิงก์สำหรับเชื่อมโยงไปยังส่วนต่างๆ ของเว็บ (ผู้สร้างแต่ละคนและส่วนติดต่อ)
<section>: แต่ละ section แสดงข้อมูลของสมาชิกในทีม เช่น ชื่อ, รูปภาพ, และรายละเอียดการศึกษา
id="member1", id="member2": ใช้สำหรับเชื่อมโยงไปยังสมาชิกแต่ละคนในทีม
<footer>: ส่วนท้ายของเว็บไซต์ แสดงข้อมูลติดต่อที่อยู่และลิขสิทธิ์

2. CSS Styles
.team-members h1: กำหนดขนาดของตัวอักษรในชื่อของสมาชิกทีมเป็น 60px
body: ตั้งค่าพื้นหลังให้โปร่งใส
footer: กำหนดพื้นหลังสีเทาเข้ม ข้อความสีขาว และการจัดตำแหน่งแบบ flex เพื่อให้ footer อยู่ด้านล่างสุดของหน้า
footer a: สไตล์สำหรับลิงก์ใน footer ให้มีพื้นหลังสีเขียวเข้มและเปลี่ยนสีเมื่อ hover
footer .footer-title: ทำให้ชื่อเว็บไซต์ "TrashTrack+" ตัวหนาและขนาดตัวอักษรใหญ่ขึ้น
Media Queries:
@media (max-width: 768px): ปรับการจัดวาง footer ให้เป็นแนวตั้งเมื่อขนาดหน้าจอลดลง
@media (max-width: 480px): ปรับขนาดตัวอักษรและ padding ของลิงก์ใน footer ให้เล็กลงเมื่อขนาดหน้าจอเล็กลง

3. JavaScript
toggleMenu(): ฟังก์ชันนี้ทำงานเมื่อคลิกที่ไอคอนเมนู (menu-icon-container)
เปลี่ยนสถานะการแสดงผลของเมนู (nav) โดยการเพิ่ม/ลบคลาส active
เปลี่ยนไอคอนเมนูจากปกติเป็นปิด (close)
เปลี่ยนข้อความในเมนูจาก "Menu" เป็น "Close" เมื่อเมนูเปิดและกลับเป็น "Menu" เมื่อเมนูปิด

4. อื่นๆ
<img src="photo/nook.jpg">: รูปภาพที่แสดงสมาชิกในทีมแต่ละคน
<p>: ใช้สำหรับการเว้นวรรคหรือข้อความที่ไม่ต้องการแสดงอะไรมาก

----------

ในส่วนของ Dashboard.html

1. HTML Structure
<html lang="en">: กำหนดภาษาในเอกสารเป็นภาษาอังกฤษ
<head>: ส่วนที่เก็บข้อมูลที่ไม่แสดงบนหน้าเว็บ เช่น meta, title, และ style
<body>: เนื้อหาหลักของหน้าเว็บ
ส่วนต่างๆ:
<div class="sidebar">: เมนูด้านข้างที่มีลิงก์ไปยังจุดต่างๆ เช่น ตำแหน่งถังขยะที่ 1, 2, และ 3
<h2>: ชื่อส่วนที่แสดงใน sidebar คือ "Google Map"
<a>: ลิงก์สำหรับนำผู้ใช้ไปยังแต่ละตำแหน่งถังขยะ
<div class="main">: พื้นที่หลักที่แสดงข้อมูลเกี่ยวกับตำแหน่งถังขยะ
<h1>: แสดงข้อความต้อนรับ
<div class="map-container">: ภาชนะสำหรับแผนที่และข้อมูลของแต่ละจุด
<div class="content">: เนื้อหาภายในแต่ละตำแหน่งถังขยะ (ชื่อสถานที่, รายละเอียด, รูปภาพ)
<iframe>: แสดงแผนที่จาก Google Maps สำหรับตำแหน่งแต่ละถังขยะ

2. CSS Styles
body: ตั้งค่าภาพรวมของหน้าเว็บ เช่น พื้นหลังสีอ่อนและการตั้งค่า font
.sidebar: สไตล์สำหรับเมนูด้านข้าง (สีพื้นหลัง, ขนาด, ตำแหน่ง fixed)
.sidebar a: กำหนดสไตล์ของลิงก์ใน sidebar (สี, ระยะห่าง, ไม่มีขีดเส้นใต้)
.main: กำหนดการจัดวางพื้นที่หลัก (พื้นที่ว่างซ้ายเพื่อให้ตรงกับ sidebar)
.map-container: กำหนดรูปแบบการจัดเรียงแผนที่และข้อมูลด้วย Flexbox (ให้มีช่องว่างระหว่างแผนที่และเนื้อหา)
@media (max-width: 768px): ปรับสไตล์เมื่อหน้าจอขนาดเล็กลง เช่น ขนาด sidebar ที่เล็กลง
@media (max-width: 480px): ปรับขนาด sidebar และพื้นที่ของ main ให้เหมาะสมกับหน้าจอที่เล็กกว่า

3. Responsive Layout
Media Queries: เมื่อขนาดหน้าจอเล็กลง (max-width: 768px และ max-width: 480px), layout ของ sidebar และพื้นที่หลักจะปรับให้เหมาะสมกับหน้าจอขนาดเล็ก (ลดขนาด sidebar และจัดรูปแบบเนื้อหาของ main)

4. การแสดงแผนที่
<iframe>: ฝังแผนที่จาก Google Maps โดยใช้ src ที่เชื่อมโยงกับตำแหน่งต่างๆ ของถังขยะ (แผนที่ถูกแสดงด้วย iframe ในแต่ละ map-container)

5. อื่นๆ
<img src="/photo/bin1.png">: รูปภาพสำหรับแสดงตำแหน่งของถังขยะแต่ละจุด

----------

ในส่วนของ Google_Map.html

1. HTML Structure
<html lang="en">: กำหนดภาษาในเอกสารเป็นภาษาอังกฤษ
<head>: ส่วนที่เก็บข้อมูลเมตา, title, และสไตล์ของหน้า
<body>: เนื้อหาหลักของหน้าเว็บ
ส่วนต่างๆ:
.sidebar: เมนูด้านข้างที่มีลิงก์ไปยังตำแหน่งต่างๆ
<h2>: หัวข้อเมนูที่แสดง "Google Map"
<a>: ลิงก์ไปยังแต่ละจุดถังขยะ
.main: พื้นที่หลักที่แสดงข้อมูล
<h1>: แสดงข้อความต้อนรับ
.map-container: พื้นที่ที่แสดงแผนที่และรายละเอียดสำหรับแต่ละจุดถังขยะ
<div class="content">: แสดงชื่อและรายละเอียดของจุดถังขยะ
<iframe>: ฝังแผนที่จาก Google Maps สำหรับแต่ละตำแหน่งถังขยะ

2. CSS Styles
body: ตั้งค่าพื้นฐานของหน้า เช่น การจัดการกับขอบและฟอนต์
.sidebar: สไตล์สำหรับเมนูด้านข้าง (ตำแหน่ง fixed, สีพื้นหลัง, ขนาด)
.main: กำหนดพื้นที่หลักให้มีระยะห่างจาก sidebar
.map-container: จัดแสดงแผนที่และเนื้อหาด้วย Flexbox ให้แสดงข้างกันและมีช่องว่างระหว่างกัน
@media (max-width: 768px): ปรับ layout สำหรับหน้าจอขนาดเล็กลง เช่น ลดขนาดของ sidebar
@media (max-width: 480px): ปรับขนาด sidebar และพื้นที่ของ main ให้เหมาะสมกับหน้าจอที่เล็กกว่า

3. การแสดงแผนที่
<iframe>: ฝังแผนที่จาก Google Maps สำหรับแต่ละจุดถังขยะ โดยใช้ src เป็นลิงก์ของแผนที่ที่ต้องการแสดง

4. อื่นๆ
<img>: แสดงรูปภาพของแต่ละจุดถังขยะ

5. การปรับแต่งสำหรับการตอบสนอง (Responsive Layout)
Media Queries: max-width: 768px: เมื่อหน้าจอเล็กลงจาก 768px, sidebar จะเล็กลงและ layout จะปรับให้เหมาะสม
max-width: 480px: เมื่อหน้าจอเล็กลงจาก 480px, sidebar จะลดขนาดลงมากขึ้น

ข้อสังเกต:
ลิงก์ใน sidebar มีความสัมพันธ์กับแผนที่ที่แสดงใน main ผ่าน ID ของแต่ละจุด เช่น #ตำแหน่งจุดถังขยะที่ 1
Flexbox ถูกใช้ใน .map-container เพื่อจัดการแผนที่และเนื้อหาที่แสดงผลให้อยู่ข้างกันและรองรับการตอบสนองได้ดี

----------

ในส่วนของ styles.css

1. พื้นฐาน (Basic Styling)
body: กำหนดฟอนต์เป็น Arial, ลดขนาด margin และ padding ของ body และกำหนดพื้นหลังเป็นสี #f4f4f4
html: กำหนดการเลื่อนหน้า (scroll) ให้มีความนุ่มนวล (smooth scrolling)

2. Header Section
header: ใช้ flex layout เพื่อจัดเรียงข้อความ (title) และเมนู โดยการตั้งค่าให้ header ติดกับด้านบนของหน้าจอ (sticky) เพื่อให้เลื่อนตามผู้ใช้งาน
nav a: กำหนดสไตล์ของลิงก์ในเมนู เช่น สีและการเปลี่ยนสีเมื่อ hover

3. Hamburger Menu for Mobile
.menu-icon-container: ซ่อนเมนูในหน้าจอใหญ่และแสดงเมนูในหน้าจอมือถือ
.menu-icon: แสดงสัญลักษณ์เมนู (☰) และปิด (X) เมื่อเมนูถูกเปิด

4. Hero Section
.hero: ตั้งค่า background-image สำหรับ section นี้ และกำหนดการจัดตำแหน่งเนื้อหาให้อยู่กลาง
.hero h2: กำหนดขนาดฟอนต์ให้ใหญ่ขึ้น โดยขนาดจะลดลงตามขนาดหน้าจอ

5. Responsive Styles for Hero Section
มีการปรับขนาดของตัวอักษรและการ padding ในแต่ละ breakpoint (จาก desktop ไปสู่ mobile)

6. Contact Info Section
.contact-info: จัดตำแหน่งให้ข้อความในแต่ละกล่องอยู่ตรงกลางและให้มีระยะห่างระหว่างกัน
.contact-info div: สไตล์สำหรับแต่ละกล่องใน section นี้ เช่น พื้นหลังโปร่งใส, padding และ border-radius

7. About Section
.about: การจัดตำแหน่งระหว่างรูปภาพและเนื้อหา โดยใช้ flex layout
.about img: กำหนดขนาดของรูปภาพ
.about a: กำหนดสไตล์ของลิงก์ใน About Section และการเปลี่ยนสีเมื่อ hover

8. Features Section
.features: ใช้ flex เพื่อจัดเรียง items ภายใน section นี้
.features-item: กำหนดสไตล์ของแต่ละ item เช่น พื้นหลัง, border-radius, padding และการแสดงผลในลักษณะของ card

9. Services Section
.services: ใช้ flex layout สำหรับการจัดตำแหน่ง item
.service-item: สไตล์ของแต่ละบริการ เช่น ขนาด, สี และการวางตำแหน่ง

10. Dashboard Section
.Dashborad: มีลักษณะการจัดเรียงคล้ายกับ features และ services โดยใช้ flex layout
.Dashborad-item: กำหนดสไตล์ให้กับแต่ละ item ใน section นี้ รวมถึงการจัดตำแหน่งของเนื้อหา

11. Mobile Styles (Navigation on Mobile)
เมื่อขนาดหน้าจอลดลงไปต่ำกว่า 768px, เมนูจะถูกซ่อนและแสดงปุ่ม hamburger เพื่อเปิดเมนู
nav.active: ทำให้เมนูแสดงขึ้นเมื่อมีการคลิก

12. Team-Member Section
.team-members: ใช้ flex layout และรองรับการแสดงผลในหลายคอลัมน์
.team-members img: กำหนดขนาดของรูปภาพและการแสดงผลที่เหมาะสมกับทุกหน้าจอ

13. Contact Us Section
.contact-us: จัดตำแหน่งรูปภาพและข้อความให้อยู่ในตำแหน่งกลาง โดยใช้ flexbox layout
.contact-us img: กำหนดขนาดของรูปภาพและการปรับขนาดให้เหมาะสมกับหน้าจอเล็ก
.contact-us .info: กำหนดพื้นที่ข้อความให้เหมาะสมและจัดให้อยู่ตรงกลาง

14. Media Queries
ใช้ media queries ในการปรับปรุงการแสดงผลให้เหมาะสมกับขนาดหน้าจอที่แตกต่างกัน เช่น จาก desktop ไปเป็น tablet และ mobile:
max-width: 768px: สำหรับแท็บเล็ต
max-width: 480px: สำหรับมือถือ